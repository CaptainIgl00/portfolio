name: deploy-portfolio

on:
  push:
    branches: [main]
  workflow_dispatch: # Permet de d√©clencher manuellement

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: üî® Install dependencies and build
        run: |
          npm ci --frozen-lockfile
          npm run build

      - name: üîë Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/key
          chmod 600 ~/.ssh/key
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: üöÄ Deploy to VPS
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          REL=$(date +%Y%m%d-%H%M%S)
          echo "üöÄ Deploying release: $REL"
          
          # Create releases directory if it doesn't exist
          ssh -i ~/.ssh/key $SSH_USER@$SSH_HOST "mkdir -p /srv/www/portfolio/releases"
          
          # Upload new release
          rsync -az --delete -e "ssh -i ~/.ssh/key" dist/ $SSH_USER@$SSH_HOST:/srv/www/portfolio/releases/$REL/
          
          # Activate new release and cleanup old ones (keep 3)
          ssh -i ~/.ssh/key $SSH_USER@$SSH_HOST "ln -sfn /srv/www/portfolio/releases/$REL /srv/www/portfolio/current && \
             find /srv/www/portfolio/releases -mindepth 1 -maxdepth 1 -type d | sort | head -n -3 | xargs -r rm -rf"
          
          echo "‚úÖ Successfully deployed release: $REL"

      - name: üîç Verify deployment
        run: |
          sleep 5
          curl -sI https://champagnedevops.fr | head -n 1 || echo "‚ö†Ô∏è Site not yet accessible, DNS might still be propagating"